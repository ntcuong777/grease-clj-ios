#!/bin/bash

set -x
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd "$DIR"

PROJECT_DIR="$DIR/.."

cd ..

clojure -T:build uberjar-native-image

mkdir -p library

rm -rf ./library/tmp

time \
    $GRAALVM_HOME/bin/native-image \
    --report-unsupported-elements-at-runtime \
    '--initialize-at-run-time=org.httpkit.client.ClientSslEngineFactory$SSLHolder' \
    --initialize-at-build-time=java.sql.SQLException \
    --no-fallback \
    -H:+ExitAfterRelocatableImageWrite \
    -H:+SharedLibrary \
    -H:+AddAllCharsets \
    -H:+ReportExceptionStackTraces \
    -H:-DeadlockWatchdogExitOnTimeout \
    -H:DeadlockWatchdogInterval=0 \
    -H:+RemoveSaturatedTypeFlows \
    -H:-SpawnIsolates \
    -H:PageSize=16384 \
    -H:EnableURLProtocols=http,https,jar \
    -Djdk.internal.lambda.eagerlyInitialize=false \
    -H:+ReportExceptionStackTraces \
    -H:TempDirectory="$PROJECT_DIR"/library/tmp \
    -H:ReflectionConfigurationFiles="${PROJECT_DIR}"/conf/reflectionconfig-arm64-ios.json \
    -H:JNIConfigurationFiles="${PROJECT_DIR}"/conf/jniconfig-arm64-ios.json \
    -H:ResourceConfigurationFiles="${PROJECT_DIR}"/conf/resourceconfig-arm64-ios.json \
    --features=clj_easy.graal_build_time.InitClojureClasses \
    --initialize-at-run-time=riddley.Util \
    -J-Dclojure.spec.skip-macros=true \
    -J-Xmx20G \
    -J-XX:MaxDirectMemorySize=8G \
    -J-Dclojure.compiler.direct-linking=true \
    -J-Dtech.v3.datatype.graal-native=true \
    -Dsvm.targetName=iOS \
    -Dsvm.targetArch=arm64 \
    -H:+UseCAPCache \
    -H:CAPCacheDir="${PROJECT_DIR}"/conf/capcache \
    -H:CompilerBackend=lir \
    -H:Name=bb \
    '-Dsvm.platform=org.graalvm.nativeimage.Platform$IOS_AARCH64' \
    -jar ./target/grease-uber.jar \
    bb

rm -rf ./library/build/out
mkdir -p ./library/build/out

mv bb.h library/bb.h
find ./library/tmp -name 'bb.o' -exec cp {} ./library/build/out \;
# find ./tmp -name 'grease-uber.o' -exec cp {} build/out \;

# This is where xcode will look for headers
# ln -s "$GRAALVM_HOME" build/graalvm
